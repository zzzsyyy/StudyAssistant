<template>
  <view wx:if="{{ pageState.state === 'finish'}}" class="wrap">
    <view class="fav_wrap">
      <view class="fav">我的收藏</view>
      <view class="btn_wrap">
        <button hover-class="btn_hover" bind:tap="onManage" wx:if="{{ !management }}" class="edit">
          编辑
        </button>
        <button
          hover-class="btn_hover"
          bind:tap="{{ checked_num == userCollection_management.length?'select_none':'select_all' }}"
          wx:if="{{ management }}"
          class="sel"
        >
          {{ checked_num == userCollection_management.length ? '取消全选' : '全选' }}
        </button>
        <button hover-class="btn_hover" bind:tap="offManage" wx:if="{{ management }}" class="cal">
          取消
        </button>
      </view>
    </view>
    <view class="divider">
      <view></view>
    </view>
    <view wx:if="{{ management }}" class="func_wrap">
      <view class="func">操作</view>
      <view class="btn_wrap">
        <button hover-class="btn_hover" bind:tap="delete" class="del">删除</button>
      </view>
    </view>
    <view wx:if="{{ management }}" class="divider">
      <view></view>
    </view>

    <view
      data-entry_id="{{ item.entry_id }}"
      class="voc_wrap"
      data-idx="{{ index }}"
      bind:tap="{{!management?'onDetail':'select'}}"
      wx:for="{{ userCollection_management }}"
      wx:key="{{ item.id }}"
    >
      <entry-item title="{{ item.entry_title }}" flag="{{ management }}">
        <!-- <voc-item title="{{ item.entry_title }}" meta="{{ item.entry_desc }}" flag="{{ management }}"> -->
        <view>
          <van-checkbox value="{{ item.checked }}"> </van-checkbox>
        </view>
      </entry-item>
      <view class="divider">
        <view></view>
      </view>
    </view>
  </view>

  <van-empty wx:if="{{ pageState.state === 'empty' }}" description="这里空空如也～" />
  <van-empty image="network" wx:if="{{ pageState.state === 'error' }}" description="发生错误惹" />
</template>

<script>
  import { createPage } from '@mpxjs/core'
  import { navTo } from '../../utils/common'
  import { request } from '../../utils/request'
  import pageStates from '../../utils/pageState'

  createPage({
    data: {
      collection: [],
      management: false, //控制管理条目（即复选框是否显示）
      // select_all: false, //是否全选
      userCollection_management: [], //与checkbox关联的条目列表
      checked_num: 0 //选择的条数
    },
    async onLoad(options) {
      //!Doing
      // this.onUnload();
      const pageState = pageStates(this)
      pageState.loading()
      try {
        const res = await request({
          url: '/collection/sync',
          data: {
            user_id: wx.getStorageSync('user_id')
          },
          method: 'POST'
        })
        console.log(res)
        const userCollection = res.data.data.collection_list
        wx.setStorageSync('userCollection', userCollection)
        this.setData({ collection: userCollection })
        this.init()
      } catch {
        pageState.error()
        console.log('err in getting collection')
      }
      if (this.data.collection.length == 0 && this.data.pageState.state != 'error') {
        console.log('search empty')
        pageState.empty()
      }
    },
    //开启条目管理
    onManage() {
      this.setData({
        management: true
      })
    },
    //关闭管理条目
    offManage() {
      this.setData({
        management: false
      })
      this.select_none()
    },
    //点击跳转详情
    onDetail(e) {
      var entry_id = e.currentTarget.dataset.entry_id
      navTo({ page: 'entryDetail', args: `?entry_id=${entry_id}` })
    },
    //初始化，将本地存储添加checked属性，用于页面展示
    init: function() {
      const pageState = pageStates(this)
      var arr = this.data.collection
      var arr2 = []
      arr.map(item => {
        arr2.push(Object.assign({}, item, { checked: false }))
      })
      console.log('init')
      this.setData({ userCollection_management: arr2 })
      pageState.finish()
    },
    //条目选择
    select: function(e) {
      const _ts = this
      if (_ts.data.manegement == false) {
        return
      } else {
        var arr = _ts.data.userCollection_management
        var index = e.currentTarget.dataset.idx
        arr[index].checked = !arr[index].checked
        if (arr[index].checked) {
          _ts.setData({ checked_num: _ts.data.checked_num + 1 })
        } else {
          _ts.setData({ checked_num: _ts.data.checked_num - 1 })
        }
        console.log(arr)
        _ts.setData({ userCollection_management: arr })
      }
    },
    //删除条目
    delete: function() {
      const _ts = this
      var arr = _ts.data.userCollection_management
      var arr2 = []
      var arr3 = wx.getStorageSync('userCollection')
      var arr4 = []
      for (let i = 0; i < arr.length; i++) {
        if (arr[i].checked == false) {
          arr2.push(arr[i])
          arr4.push(arr3[i])
        }
      }
      wx.setStorageSync('userCollection', arr4)
      wx.setStorageSync('need_submit', true)
      _ts.setData({ userCollection_management: arr2, checked_num: 0 })
    },
    //全选
    select_all: function() {
      var arr = this.data.userCollection_management
      for (let i = 0; i < arr.length; i++) {
        arr[i].checked = true
      }
      this.setData({ userCollection_management: arr, checked_num: arr.length })
    },
    //取消全选
    select_none: function() {
      var arr = this.data.userCollection_management
      for (let i = 0; i < arr.length; i++) {
        arr[i].checked = false
      }
      this.setData({ userCollection_management: arr, checked_num: 0 })
    },
    //向服务器提交
    submit: async function() {
      try {
        const res = await request({
          url: '/collection/submit',
          data: {
            user_collection: wx.getStorageSync('userCollection'),
            user_id: wx.getStorageSync('user_id')
          },
          method: 'POST'
        })
        console.log(wx.getStorageSync('userCollection'))
        console.log(res)
        if (res.data.data.updated) {
          wx.setStorageSync('need_submit', false)
        }
      } catch (err) {
        console.log('err in submit collection to server' + err)
      }
    },
    onUnload() {
      const need_submit = wx.getStorageSync('need_submit')
      console.log('collection submit')
      if (need_submit == true) {
        this.submit()
      }
    }
  })
</script>

<style lang="less">
  page {
    background-color: var(--pageColorLight);
  }

  .wrap {
    display: flex;
    background-color: var(--boardColorLight);
    margin: 40rpx 20rpx 0;
    border-radius: 16rpx;
    flex-direction: column;

    .fav_wrap {
      width: 100%;
      height: 80rpx;
      display: flex;
      justify-content: space-between;
      align-items: center;
      .fav {
        font-size: 32rpx;
        margin: 10rpx 0 0 20rpx;
      }
    }

    .func_wrap {
      display: flex;
      background-color: var(--boardColorLight);
      height: 80rpx;
      align-items: center;
      justify-content: space-between;

      .func {
        font-size: 32rpx;
        margin: 10rpx 0 0 40rpx;
      }
    }
  }

  .btn_wrap {
    display: flex;
    align-items: center;
    margin-right: 14rpx;
    .edit,
    .cal,
    .sel,
    .del {
      font-size: 24rpx;
      height: 56rpx;
      width: 110rpx;
      background-color: #eee;
      border-radius: 12rpx;

      &::after {
        border: 0;
        border-radius: 12rpx;
      }
    }

    .del {
      background-color: #fe0000;
      color: #fff;
    }

    .sel {
      margin-right: 20rpx;
      width: 150rpx;
      font-size: 22rpx;
    }
  }

  .btn_hover {
    background-color: #dcdcdc !important;
    opacity: 0.9 !important;
  }

  .divider {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    margin: 8rpx 0 8rpx;
    view {
      width: 90%;
      height: 2rpx;
      background-color: var(--pageColorLight);
    }
  }

  @media (prefers-color-scheme: dark) {
    page {
      background-color: var(--pageColorDark);
    }
    .btn_wrap {
      .edit,
      .cal,
      .sel {
        background-color: #333;
      }
      .del {
        background-color: #fe0000;
      }
    }
    .wrap {
      background-color: var(--boardColorDark);
      .func_wrap {
        background-color: var(--boardColorDark);
      }
    }
    .divider {
      view {
        background-color: var(--pageColorDark);
      }
    }
  }
</style>

<script type="application/json">
  {
    "navigationBarTitleText": "我的收藏",
    "usingComponents": {
      "entry-item": "../../components/entry-item/entry-item",
      "van-empty": "../../components/vant/empty/index",
      "van-checkbox": "../../components/vant/checkbox/index"
    }
  }
</script>
